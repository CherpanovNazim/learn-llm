{# Set bos_token to an empty string #}
{%- set bos_token = '' %}

{# Use bos_token in your template #}
{{ bos_token }}

{# Continue with the rest of your template #}

{%- set tools = custom_tools if custom_tools is defined else none %}
{%- set tools_in_user_message = tools_in_user_message if tools_in_user_message is defined else true %}
{%- set date_string = date_string if date_string is defined else '26 Jul 2024' %}

{%- if messages[0]['role'] == 'system' %}
    {%- set system_message = messages[0]['content']|trim %}
    {%- set messages = messages[1:] %}
{%- else %}
    {%- set system_message = '' %}
{%- endif %}

{# Construct the chat template #}
{{ bos_token }}
{%- if builtin_tools is defined or tools is not none %}
    {{ "Environment: ipython\n" }}
{%- endif %}
{%- if builtin_tools is defined %}
    {{ "Tools: " + (builtin_tools | reject('equalto', 'code_interpreter') | join(", ")) + "\n\n" }}
{%- endif %}
{{ "Cutting Knowledge Date: December 2023\n" }}
{{ "Today Date: " + date_string + "\n\n" }}

{%- if tools is not none and not tools_in_user_message %}
    {{ "You have access to the following functions. To call a function, please respond with JSON for a function call." }}
    {{ "Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}." }}
    {{ "Do not use variables.\n\n" }}
    {%- for t in tools %}
        {{ t | tojson(indent=4) }}
        {{ "\n\n" }}
    {%- endfor %}
{%- endif %}

{{ system_message }}

{%- if tools_in_user_message and tools is not none %}
    {%- if messages | length != 0 %}
        {%- set first_user_message = messages[0]['content']|trim %}
        {%- set messages = messages[1:] %}
    {%- else %}
        {{ raise_exception("Cannot put tools in the first user message when there's no first user message!") }}
    {%- endif %}
    {{ 'user\n\n' }}
    {{ "Given the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.\n\n" }}
    {{ "Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}." }}
    {{ "Do not use variables.\n\n" }}
    {%- for t in tools %}
        {{ t | tojson(indent=4) }}
        {{ "\n\n" }}
    {%- endfor %}
    {{ first_user_message }}
{%- endif %}

{%- for message in messages %}
    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}
        {{ message['role'] + '\n\n' + message['content'] | trim }}
    {%- elif 'tool_calls' in message %}
        {%- if message.tool_calls | length != 1 %}
            {{ raise_exception("This model only supports single tool-calls at once!") }}
        {%- endif %}
        {%- set tool_call = message.tool_calls[0].function %}
        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}
            {{ 'assistant\n\n' }}
            {{ tool_call.name + '.call(' }}
            {%- for arg_name, arg_val in tool_call.arguments | items %}
                {{ arg_name + '="' + arg_val + '"' }}
                {%- if not loop.last %}
                    {{ ", " }}
                {%- endif %}
            {%- endfor %}
            {{ ')' }}
        {%- else %}
            {{ 'assistant\n\n' }}
            {{ '{"name": "' + tool_call.name + '", "parameters": ' + tool_call.arguments | tojson + '}' }}
        {%- endif %}
    {%- elif message.role == "tool" or message.role == "ipython" %}
        {{ "ipython\n\n" }}
        {%- if message.content is mapping or message.content is iterable %}
            {{ message.content | tojson }}
        {%- else %}
            {{ message.content }}
        {%- endif %}
    {%- endif %}
{%- endfor %}

{%- if add_generation_prompt %}
    {{ 'assistant\n\n' }}
{%- endif %}
